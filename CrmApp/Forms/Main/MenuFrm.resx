<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="UserPic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="CompanyPic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        z7FKHXZvCgAAAABJRU5ErkJggg==
</value>
  </data>
</root>